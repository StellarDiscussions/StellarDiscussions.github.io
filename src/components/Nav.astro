---
import Icon from "./Icon.astro";
import type { iconPaths } from "./IconPaths";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: "Home", href: "/" },
	{ label: "Planets & Stars", href: "/planets/" },
	{ label: "Extraterrestrials", href: "/extraterrestrials/" },
	{ label: "Support Us", href: "/support/" },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: {
	label: string;
	href: string;
	icon: keyof typeof iconPaths;
}[] = [
	{
		label: "YouTube",
		href: "https://www.youtube.com/@stellardiscussions",
		icon: "youtube-logo",
	},
];
---

<nav>
	<div class="menu-header">
		<a href="/" class="site-title">
			<svg
				width="32"
				height="32"
				viewBox="0 0 8.466666 8.466666"
				version="1.1"
				id="svg1"
				xml:space="preserve"
				xmlns="http://www.w3.org/2000/svg"
				><defs id="defs1"></defs><path
					id="path12-1"
					style="opacity:1;vector-effect:non-scaling-stroke;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.070011;stroke-dasharray:none;-inkscape-stroke:hairline"
					d="m 3.9566005,0.5390773 a 3.704119,3.7049276 0 0 0 -3.427434,3.693894 3.7041665,3.704975 0 0 0 7.408333,0 3.704119,3.7049276 0 0 0 -3.980899,-3.693894 z m -0.269349,0.565618 c 0.0056,0.09175 0.03154,0.175999 0.07766,0.252859 l -1.344284,2.328808 h -0.02038 l -0.432737,-0.74983 c 0.208161,-0.380293 -0.04833,-0.666739 -0.169813,-0.740665 0.474595,-0.573831 1.146008,-0.959438 1.889546,-1.091172 z m 1.092163,0 0.100768,0.01928 v 0.542373 l -0.178427,-0.308797 c 0.04266,-0.06596 0.06857,-0.150211 0.07766,-0.252859 z m 0.629894,0.178604 c 0.540285,0.206345 1.072276,0.623671 1.409093,1.106352 h -1.195117 c -0.0613,-0.101703 -0.132602,-0.173163 -0.213976,-0.2143 z m -1.186093,0.338603 c 0.0071,1.26e-4 0.01383,1.26e-4 0.02023,0 l 0.432873,0.749831 c -0.149909,0.209244 -0.09864,0.818995 0.478539,0.829148 l 0.432872,0.750236 c -0.104569,0.212878 -0.104569,0.400892 0,0.564253 l -1.344284,2.328669 c -0.0068,-1.82e-4 -0.01346,-1.68e-4 -0.02023,1.4e-4 l -1.344285,-2.328942 c 0.10457,-0.183925 0.10457,-0.371939 0,-0.56412 z m 1.400069,1.296712 h 1.500288 c 0.151839,0.335782 0.243127,0.685834 0.273725,1.050008 h -0.862465 c -0.116195,-0.188161 -0.279155,-0.282309 -0.488794,-0.28226 l -0.432872,-0.74983 c 0.0031,-0.0054 0.0065,-0.01144 0.01012,-0.01792 z m -4.371661,0.223185 c 0.07378,0.03905 0.159675,0.05875 0.257591,0.05908 l 0.432873,0.750236 c -0.104569,0.18812 -0.104569,0.376141 0,0.564253 l -0.597627,1.035101 c -0.303037,-0.659598 -0.411736,-1.528404 -0.09284,-2.408672 z m 5.283209,1.356066 h 0.862465 c -0.161413,1.551622 -1.267646,2.636723 -2.617883,2.863388 -0.008,-0.09927 -0.03386,-0.183323 -0.07766,-0.25232 l 1.344285,-2.329074 c 0.248405,-0.02398 0.411366,-0.117996 0.488793,-0.281994 z m -4.134578,0.282267 c 0.0046,-1.75e-4 0.0114,-1.75e-4 0.02038,0 l 1.344284,2.328528 c -0.04525,0.07378 -0.07116,0.157956 -0.07766,0.252593 -0.748121,-0.129024 -1.520467,-0.549549 -2.037079,-1.281812 z"
				></path>
			</svg>
			Stellar Discussions
		</a>
		<menu-button>
			<template>
				<button class="menu-button" aria-expanded="false">
					<span class="sr-only">Menu</span>
					<Icon icon="list" />
				</button>
			</template>
		</menu-button>
	</div>
	<noscript>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a
							aria-current={Astro.url.pathname === href}
							class:list={[
								"link",
								{
									active:
										Astro.url.pathname === href ||
										(href !== "/" &&
											Astro.url.pathname.startsWith(
												href,
											)),
								},
							]}
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
	</noscript>
	<noscript>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
		</div>
	</noscript>
	<div id="menu-content" hidden>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a
							aria-current={Astro.url.pathname === href}
							class:list={[
								"link",
								{
									active:
										Astro.url.pathname === href ||
										(href !== "/" &&
											Astro.url.pathname.startsWith(
												href,
											)),
								},
							]}
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
		</div>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(
				this.querySelector("template")!.content.cloneNode(true),
			);
			const btn = this.querySelector("button")!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById("menu-content")!;
			menu.hidden = true;
			// Add "menu-content" class in JS to avoid covering content in non-JS browsers.
			menu.classList.add("menu-content");

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute("aria-expanded", expand ? "true" : "false");
				menu.hidden = !expand;
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener("click", () => setExpanded(menu.hidden));

			// Hide menu button for large screens.
			const handleViewports = (
				e: MediaQueryList | MediaQueryListEvent,
			) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			const mediaQueries = window.matchMedia("(min-width: 50em)");
			handleViewports(mediaQueries);
			mediaQueries.addEventListener("change", handleViewports);
		}
	}
	customElements.define("menu-button", MenuButton);
</script>

<style>
	nav {
		z-index: 9999;
		position: relative;
		font-family: var(--font-brand);
		font-weight: 500;
		margin-bottom: 3.5rem;
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1.5rem;
	}

	.site-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
	}

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
	}

	.menu-button[aria-expanded="true"] {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	.menu-button[hidden] {
		display: none;
	}

	.menu-button::before {
		position: absolute;
		inset: -1px;
		content: "";
		background: var(--gradient-stroke);
		border-radius: 999rem;
		z-index: -1;
	}

	.menu-content {
		position: absolute;
		left: 0;
		right: 0;
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		font-size: var(--text-md);
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		background-color: var(--gray-999);
		border-bottom: 1px solid var(--gray-800);
	}

	.link {
		display: inline-block;
		color: var(--gray-300);
		text-decoration: none;
	}

	.link.active {
		color: var(--gray-0);
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;

		display: flex;
		justify-content: space-between;
		gap: 0.75rem;
		padding: 1.5rem 2rem 1.5rem 1.5rem;
		background-color: var(--gray-999);
		border-radius: 0 0 0.75rem 0.75rem;
		box-shadow: var(--shadow-lg);
	}

	.socials {
		display: flex;
		flex-wrap: wrap;
		gap: 0.625rem;
		font-size: var(--icon-size);
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.social:hover,
	.social:focus {
		color: var(--accent-text-over);
	}

	.theme-toggle {
		display: flex;
		align-items: center;
		height: calc(var(--icon-size) + 2 * var(--icon-padding));
	}

	@media (min-width: 50em) {
		nav {
			display: grid;
			grid-template-columns: 1fr auto 1fr;
			align-items: center;
			padding: 2.5rem 5rem;
			gap: 1rem;
		}

		.menu-header {
			padding: 0;
		}

		.site-title {
			font-size: var(--text-lg);
		}

		.menu-content {
			display: contents;
		}

		.nav-items {
			position: relative;
			flex-direction: row;
			font-size: var(--text-sm);
			border-radius: 999rem;
			border: 0;
			padding: 0.5rem 0.5625rem;
			background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
			box-shadow: var(--shadow-md);
		}

		.nav-items::before {
			position: absolute;
			inset: -1px;
			content: "";
			background: var(--gradient-stroke);
			border-radius: 999rem;
			z-index: -1;
		}

		.link {
			padding: 0.5rem 1rem;
			border-radius: 999rem;
			transition:
				color var(--theme-transition),
				background-color var(--theme-transition);
		}

		.link:hover,
		.link:focus {
			color: var(--gray-100);
			background-color: var(--accent-subtle-overlay);
		}

		.link.active {
			color: var(--accent-text-over);
			background-color: var(--accent-regular);
		}

		.menu-footer {
			--icon-padding: 0.375rem;

			justify-self: flex-end;
			align-items: center;
			padding: 0;
			background-color: transparent;
			box-shadow: none;
		}

		.socials {
			display: none;
		}
	}

	@media (min-width: 60em) {
		.socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}
	}
	@media (forced-colors: active) {
		.link.active {
			color: SelectedItem;
		}
	}
</style>
